@page "/signin"
@using Microsoft.AspNetCore.Components.Forms
@using BlazorApp1
@inject NavigationManager _nav

<h3>Sign In</h3>

<EditForm Model="@Model" OnValidSubmit="HandleSignIn" FormName="signin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="@Model.Email" class="form-control" />
        <ValidationMessage For="@(() => Model.Email)" />
    </div>

    <div class="form-group">
        <label>Password:</label>
        <InputText @bind-Value="@Model.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => Model.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Sign In</button>
</EditForm>

@code {

    [SupplyParameterFromForm]
    public SignInModel? Model { get; set; }
    
    protected override void OnInitialized() => Model ??= new();
    private void HandleSignIn()
    {
        // Perform sign-in logic here
        // For simplicity, you can check credentials and navigate to the profile page on success
        if (IsValidCredentials())
        {
            _nav.NavigateTo("/create-job");
        }
        else
        {
            // Handle failed sign-in
        }
    }

    private bool IsValidCredentials()
    {
        // Implement your authentication logic here
        // For demonstration purposes, return true
        return true;
    }
}
